/*
 * File: CheckerboardKarel.java

 * ----------------------------
 * When you finish writing it, the CheckerboardKarel class should draw
 * a checkerboard using beepers, as described in Assignment 1.  You
 * should make sure that your program works for all of the sample
 * worlds supplied in the starter folder.
 */

import stanford.karel.*;

public class CheckerboardKarel1 extends SuperKarel {
	
	/*Karel starts at the corner of 1st avenue and 1st street facing East.
	 *This program runs a loop of two conditions for odd number row and even number row.
	 *The odd number row always start by putting a beeper.  Then, it continues creating a checkered 
	 *board pattern until reaching the wall.  It then goes back to the beginning and move up to the 
	 *next row. While the even number row, Karel starts by moving to the next corner and drop a beeper.  
	 *Then, it continues creating a checkered board pattern and goes back to the beginning and move up 
	 *to the next row just like in the odd number row.
	 */

	public void run(){
		
		while(facingEast()){
			
		//odd row
			putBeeper();
			if(frontIsClear()){
				createChecker();
				backToStart();
				upNextRow();
			
			}else{
				backToStart();
				upNextRow();
			}
		
		//even row
			if(frontIsClear()){
				move();
				putBeeper();
				createChecker();
				backToStart();
				upNextRow();
			
			}else{
				backToStart();
				upNextRow();
			}
		}
		
	}
	
	private void backToStart(){
		turnAround();
		while(frontIsClear()){
			move();
		}
	}
	
	
	private void upNextRow(){
		turnRight();
		if(frontIsClear()){
			move();
			turnRight();
		}	
	}
		
	
	private void createChecker(){
		while(frontIsClear()){
			move();
			if(frontIsClear()){
				move();
				putBeeper();
			}
		}
	}

}
